; edn spec https://www.github.com/edn-format/edn
; structure inspired by https://github.com/yqrashawn/GokuRakuJoudo/blob/master/resources/configurations/edn/example.edn

;; this is a little bit weird, but it's convenient
;; the rule [:!Ca :!T1]
;; means from command a to control 1
;; :!Ca is keycode :a and prefix a with !C

;; here's the definition

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; examples

;; !CTSequal_sign  | mandatory command control shift =
;;                 | which is command control +
;; !O#Sright_arrow | mandatory option optional any right_arrow

;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

;; rule [<from> <to>]
;; if simplified modifier is used in <to>, optional(#) definition will be
;; ignored.

{
:devices {
    ; keyboards
    :macbook-air    [{:vendor_id  1452 :product_id   641}]
    :kb-pro    [{:vendor_id  1452 :product_id   832}]
    :magic-kb-pro   [{:vendor_id  1452 :product_id   620}]
    :magic-kb-air   [{:vendor_id    76 :product_id   620}]
    :mark1     [{:vendor_id 12951 :product_id  6505}]
    :glove80   [{:vendor_id  5824 :product_id 10203}]
    ; mouses
    :mx-ergo   [{:vendor_id  1133 :product_id 45085}]
    :mx-master [{:vendor_id 1133 :product_id 45091}]
}
:applications { :chrome ["^com\\.google\\.Chrome$"] }
:input-sources {
    :qw { :input_source_id "US" :language "en" }
    :dv { :input_source_id "Dvorak" :language "en" }
    :ru { :input_source_id "Russian" }
}
; :layers {:hyper-mode {:key :caps_lock :alone {:key :escape}}}
:profiles {:Default {
    ;; simultaneous_threshold_milliseconds (def: 50)
    ;; keys need to be pressed within this threshold to be considered simultaneous
    ; :sim     50

    ;; to_delayed_action_delay_milliseconds (def: 500)
    ;; basically it means time after which the key press is count delayed
    ; :delay   500

    ;; to_if_alone_timeout_milliseconds (def: 1000)
    ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
    ; :alone   1000

    ;; to_if_held_down_threshold_milliseconds (def: 500)
    ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
    ;; increase this value to allow you to hold a simlayer key longer before the next key is pressed
    ; :held    1000

    :default true
    :sim 0
    :delay 500
    ; :alone 500
    :alone 1000
    :held 100
}}
:main [

; previously simple_modifications
; goku cannot write simple_modifications
; https://github.com/yqrashawn/GokuRakuJoudo/issues/44

{:des "f7 through f12 are media keys"
    :rules [
        [:condi :macbook-air :magic-kb-air :magic-kb-pro]
        [:f7 :rewind] [:f8 :play_or_pause] [:f9 :fastforward] [:f10 :mute] [:f11 :volume_decrement] [:f12 :volume_increment]
        ; fn+f7 through f12 are function keys
        [:!Ff7 :f7] [:!Ff8 :f8] [:!Ff9 :f9] [:!Ff10 :f10] [:!Ff11 :f11] [:!Ff12 :f12]
    ]
}
{:des "escape. escape by itself run hammerspoon://escape, which switches to last app."
    :rules [
        [:escape "open -g hammerspoon://escape"]
    ]
}
{:des "vim-everywhere"
    :rules [
        ; :hyper-mode
        [:condi :dv]

        ; LEFT half of the keyboard
        [:!O#CSTq :delete_forward] [:!O#CSTe :return_or_enter]
        [:!O#CSTa :!CTequal_sign] ; next kitty window ; equal_sign
        [:!O#CSTs :!TStab] [:!O#CSTd :!Ttab]
        [:!O#CSTg :!CThyphen] ; previous kitty window ; hyphen

        ; RIGHT half of the keyboard
        [:!O#CSTu :!Stab] [:!O#CSTi :return_or_enter] [:!O#CSTo :tab] [:!O#CSTp :delete_forward]
        [:!O#CSTh :end] [:!O#CSTj :down_arrow] [:!O#CSTk :up_arrow] [:!O#CSTl :home] [:!O#CSTsemicolon :delete_or_backspace]

        ; [:#OCSTj :down_arrow]
        ; [:#OCSTk :up_arrow]
        [:!O#CSTn    :!Oleft_arrow] [:!O#CSTm :left_arrow] [:!O#CSTcomma :right_arrow] [:!O#CSTperiod :!Oright_arrow]
    ]
}
{:des "vim-everywhere bottom-left orthogonal keyboards"
    :rules [ [:condi :glove80 :dv] [:!O#CSTx :end] [:!O#CSTc :down_arrow] [:!O#CSTv :up_arrow] [:!O#CSTb :home] ]
}
{:des "vim-everywhere bottom-left non-orthogonal keyboards"
    :rules [ [:condi :macbook-air :dv] [:!O#CSTz :end] [:!O#CSTx :down_arrow] [:!O#CSTc :up_arrow] [:!O#CSTv :home] ] 
}
{:des "numbers  <->  shift numbers" 
    :rules [ [:condi :dv] [:1 :!S1] [:!S1 :1] [:2 :!S2] [:!S2 :2] [:3 :!S3] [:!S3 :3] [:4 :!S4] [:!S4 :4] [:5 :!S5] [:!S5 :5] [:6 :!S6] [:!S6 :6] [:7 :!S7] [:!S7 :7] [:8 :!S8] [:!S8 :8] [:9 :!S9] [:!S9 :9] [:0 :!S0] [:!S0 :0] ]
}
{:des "caps_lcock  ->  escape/left_option"
    :rules [ [:condi :dv] [:##caps_lock :left_option nil { :alone [:escape] }] ]
}
;; everywhere dvorak
{:des ""
    :rules [
        [:condi :dv :glove80]
        [:z :left_shift nil { :alone [:!Sz] }]
        [:##open_bracket :left_control nil { :alone [:hyphen] }]
        [:##close_bracket :left_control nil { :alone [:equal_sign] }]
    ]
}
{:des "domos-dvorak"
    :rules [
        [:condi :dv]
        [:#FOSQWERj :k]
        [:#FOSQWERk :j]
        [:#FOSQWERf :g]
        [:#FOSQWERg :f]
        [:##hyphen :left_shift nil {
            :alone [:quote]
        }]
        [:##equal_sign :close_bracket]
        [:##open_bracket :hyphen]
        [:##close_bracket :equal_sign]
        [:##quote :left_option nil {
            :alone [:open_bracket]
        }]
        ; backslash is shift
        [:##backslash :left_shift nil {
        :alone [:backslash]
        }]
        [:##slash :left_shift nil {
            :alone [:slash]
        }]
        [:##right_command :left_option nil {
            :alone [:return_or_enter]
        }]
    ]
}

{:des "dvorak modifiers cmd"
    :rules [
        ; change: swap cmd+q <-> shift+cmd+q
        ; [:!C#FTOSQWERq :!Cx]
        ; [:!C#FTOQWERq :!CTx]
        [:condi :dv]
        ; top row is Q to P on standard Qwerty keyboard
        [:!CS#FTOSQWERq :!Cx] [:!C#FTOSQWERw :!Ccomma] [:!C#FTOSQWERe :!Cd] [:!C#FTOSQWERr :!Co] [:!C#FTOSQWERt :!Ck] [:!C#FTOSQWERy :!Ct] [:!C#FTOSQWERu :!Cf] [:!C#FTOSQWERi :!Cg] [:!C#FTOSQWERo :!Cs] [:!C#FTOSQWERp :!Cr]

        ; home row is A to semicolon on standard Qwerty keyboard
        [:!C#FTOSQWERa :!Ca] [:!C#FTOSQWERs :!Csemicolon] [:!C#FTOSQWERd :!Ch] [:!C#FTOSQWERf :!Cy] [:!C#FTOSQWERg :!Cu] [:!C#FTOSQWERh :!Cj] [:!C#FTOSQWERj :!Cc] [:!C#FTOSQWERk :!Cv] [:!C#FTOSQWERl :!Cp] [:!C#FTOSQWERsemicolon :!Cz]

        ; bottom row is Z to period on standard Qwerty keyboard
        [:!C#FTOSQWERz :!Cslash] [:!C#FTOSQWERx :!Cb] [:!C#FTOSQWERc :!Ci] [:!C#FTOSQWERv :!Cperiod] [:!C#FTOSQWERb :!Cn] [:!C#FTOSQWERn :!Cl] [:!C#FTOSQWERm :!Cm] [:!C#FTOSQWERcomma :!Cw] [:!C#FTOSQWERperiod :!Ce] [:!C#FTOSQWERslash :!Copen_bracket]

    ]
}

{:des "dvorak modifiers ctrl"
    :rules [
        [:condi :dv]
        ; top row is Q to P on standard Qwerty keyboard
        [:!T#FOSQWERq :!Tx] [:!T#FOSQWERw :!Tcomma] [:!T#FOSQWERe :!Td] [:!T#FOSQWERr :!To] [:!T#FOSQWERt :!Tk] [:!T#FOSQWERy :!Tt] [:!T#FOSQWERu :!Tf] [:!T#FOSQWERi :!Tg] [:!T#FOSQWERo :!Ts] [:!T#FOSQWERp :!Tr]

        ; home row is A to semicolon on standard Qwerty keyboard
        [:!T#FOSQWERa :!Ta] [:!T#FOSQWERs :!Tsemicolon] [:!T#FOSQWERd :!Th] [:!T#FOSQWERf :!Ty] [:!T#FOSQWERg :!Tu] [:!T#FOSQWERh :!Tj] [:!T#FOSQWERj :!Tc] [:!T#FOSQWERk :!Tv] [:!T#FOSQWERl :!Tp] [:!T#FOSQWERsemicolon :!Tz]

        ; bottom row is Z to period on standard Qwerty keyboard
        [:!T#FOSQWERz :!Tslash] [:!T#FOSQWERx :!Tb] [:!T#FOSQWERc :!Ti] [:!T#FOSQWERv :!Tperiod] [:!T#FOSQWERb :!Tn] [:!T#FOSQWERn :!Tl] [:!T#FOSQWERm :!Tm] [:!T#FOSQWERcomma :!Tw] [:!T#FOSQWERperiod :!Te]
    ]
}
{:des "dvorak botom-left"
    :rules [
        [:condi :macbook-air :dv]
        [:!Ograve_accent_and_tilde :z]
        [:##CFTOQWgrave_accent_and_tilde :left_shift nil {
            :alone [:!Sz]
        }]
        [:#OSQWERz :x] [:#OSQWERx :c] [:#OSQWERc :v] [:#OSQWERv :b] [:#OSQWERb :y] ]
}
{:des "`/~  <->  §/±"
    :rules [
        [:condi :mark1 :glove80] [:##grave_accent_and_tilde :non_us_backslash] [:##non_us_backslash :grave_accent_and_tilde]
    ]
}
{:des "dv mark1 ;  <->  :"
    :rules [ [:condi :dv :mark1 :glove80] [:z :!Sz] [:!Sz :z] ]
}

; region mouses
{:des "mx ergo"
    :rules [ [:condi :mx-ergo] [:button4 :!Copen_bracket] [:button5 :!Cclose_bracket] ]
}
{:des "mx master middle button"
    :rules [ [:condi :mx-master] [{:pkey :button3} :!Ospacebar] ]
}

] ; close main
} ; close top level
